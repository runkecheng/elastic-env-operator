name: Build and Test

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - converted_to_draft

jobs:
  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.17'
    - name: Build and Check
      env:
        GO111MODULE: on
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        make build
        make check
    - name: Test
      run: |
        make test

  e2e:
    name: E2E Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.17'
    - name: Build and Check
      env:
        GO111MODULE: on
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        make build
        make check
    - name: start minikube
      id: minikube
      uses: medyagh/setup-minikube@latest
    - name: Test
      run: |
        make e2e

  build:
    needs: [unit_test, e2e]
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      timeout-minutes: 20
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/shouqianba-ft/elastic-env-operator:latest
        platforms: linux/amd64
        labels: ${{ steps.meta.outputs.labels }}
